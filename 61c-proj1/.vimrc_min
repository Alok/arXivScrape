set nocompatible

" TODO: this may not be in the correct place. It is intended to allow overriding <Leader>.
" source ~/.vimrc.before if it exists.
if filereadable(expand("~/.vimrc.before"))
  source ~/.vimrc.before
endif

" ================ General Config ===================

set mousemodel=extend
set number                      " Line numbers are good
set ruler
set backspace=indent,eol,start  " Allow backspace in insert mode
set history=1000                " Store lots of :cmdline history
set showcmd                     " Show incomplete cmds down the bottom
set showmode                    " Show current mode down the bottom
set gcr=a:blinkon0              " Disable cursor blink
set visualbell                  " No sounds
set autoread                    " Reload files changed outside vim
set mouse=a
set virtualedit=onemore
set clipboard=unnamed,unnamedplus
set hidden
set timeoutlen=500
set encoding=utf-8
set cursorline
set cursorcolumn
syntax on
" set gdefault                    " global search by default.
au FocusLost * :wa              " saves file on focus change
" set spell for markdown
autocmd BufRead,BufNewFile *.md setlocal spell
" syntax highlight 'less' files
au BufRead,BufNewFile *.less set filetype=css

syntax enable
syn match myTodo "\<\l\{2\}TODO\>"
syn match myTodo2 "\<QUESTION>"
hi def link myTodo Todo
hi def link myTodo2 Todo

" move by screen line
noremap <Down> gj
noremap <Up> gk
" stop arrow keys from typing A B C D
map OA <up>
map OB <Down>
map OD <left>
map OC <right>
noremap h gj
noremap k gk
noremap j h

" To jump around tags defs easier.
nnoremap <c-[> <c-t>

" sets a line to find your cursor position
" augroup cline
    " au!
    " au WinLeave,InsertEnter * set nocursorline
    " au WinEnter,InsertLeave * set cursorline
" augroup END

" marks 80th column
if (exists('+colorcolumn'))
    set colorcolumn=80
    highlight ColorColumn ctermbg=9
endif

" The mapleader has to be set before vundle starts loading all
" the plugins.

let mapleader="\<Space>"
let maplocalleader = "-"

" TODO don't forget about backslash as a third leader

" ================ Startify ===================
"

" =============== Vundle Initialization ===============

" This loads all the plugins specified in ~/.vim/vundles.vim
" Use Vundle plugin to manage all other plugins
 set rtp+=~/.vim/bundle/vundle/Vundle.vim
 set rtp+=~/.fzf
if filereadable(expand("~/.vim/vundles.vim"))
  source ~/.vim/vundles.vim
endif

" ================ Turn Off Swap Files =============
"
 set noswapfile
 set nobackup
 set nowb

" ================ Modules ==========================

set rtp+=/usr/local/Cellar/fzf/0.9.4-1

" ================ Change Cursor Shape ==========================

let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x10"

" ================ Persistent Undo ==================

" Keep undo history across sessions, by storing in file.
if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·


set nowrap       " Don't wrap lines
set linebreak    " Wrap lines at convenient points

" ================ Folds ============================

set foldmethod=indent " fold based on indent
set foldnestmax=30    " deepest fold is 30 levels
set nofoldenable      " don't fold by default
set foldlevelstart=99 " start with folds open

" more stuff that's fine
" ================ Completion =======================

set wildmode=list:longest
set wildmenu                " enable ctrl-n and ctrl-p to scroll through matches
set wildignore=*.o,*.obj,*~ " stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" ================ Scrolling ========================

set scrolloff=8         " Start scrolling when we're 8 lines away from margins
set sidescrolloff=4
set sidescroll=1



" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

" ================ Custom Mappings===========================
" ================ Plugins ===========================

" change working directory to current file's directory
nnoremap <leader>cd :cd %:p:h<CR>





" saves effort of going to beginning of word
nnoremap yw yiw
nnoremap cw "_ciw
nnoremap dw "_diw

" close linter window fast
nnoremap <Leader>l :lclose<CR>

" add newline in normal mode
nnoremap <c-b> o<Esc>k
nnoremap <M-o> o<Esc>k

" toggle wrap modes
nnoremap <leader>sr :set wrap!<CR>



" Create window splits easier. The default
" way is Ctrl-w,v and Ctrl-w,s. I remap
" this to vv and ss
nnoremap <silent> -- <C-w>v
nnoremap -v <C-w>s

" easy folding
nnoremap zz zf
"
" make searching easier
nnoremap <LocalLeader>s :%s,
" noremap <CR> /
nnoremap <CR> /\v
vnoremap <CR> /\v

" for the quickfix window
nnoremap / <CR>
vnoremap / <CR>

" Make go to file create the file, if not existent
nnoremap <leader>gf :e<cfile><CR>
nnoremap <C-w>f :sp +e<cfile><CR>
nnoremap <C-w>gf :tabe<cfile><CR>

" Zoom in
map <silent> <leader>gz <C-w>o

" Create window splits easier.
nnoremap <silent> -- <C-w>v
nnoremap <silent> -c <C-w>s

" TODO: figure out what this does
nnoremap zO zCzO

" switch buffers fast
nnoremap <S-Left>  :bp<cr>
nnoremap <S-Right> :bp<cr>




" TODO: figure out what this does
inoremap <c-j> <c-x><c-f>
inoremap <c-k> <c-x><c-]>

nnoremap <c-a> ^
vnoremap <c-a> ^




" end of line
nnoremap <c-e> $
vnoremap <c-e> g_

noremap <c-x> "_x


" CtrlP mappings
let g:ctrlp_map = '<LocalLeader>t'
nnoremap <silent> <LocalLeader>t :CtrlP<CR>
nnoremap <silent> <LocalLeader>= :CtrlPBuffer<cr>
" pasting and show yankring
noremap <Leader>P :pu<CR>
" nnoremap <Leader>yr :YRShow<CR>

" TODO: make tab work for angle brackets
" ================ Return to last edit ===========================

" Return to last edit position when opening files (You want this!)
let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif

" ================ Misc ===========================

" Remember info about open buffers on close
set viminfo^=%
